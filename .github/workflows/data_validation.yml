name: Data validation

on:
  pull_request:

env:
  LIBRARIES_PATH: common_libraries/common_libraries.tsv
  SAMPLES_PATH: common_samples/common_samples.tsv

jobs:

  precheck:
    runs-on: ubuntu-latest
    outputs:
        variable_libraries: ${{ steps.set-variable.outputs.variable_libraries }}
        variable_samples: ${{ steps.set-variable.outputs.variable_samples }}

    steps:

      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          
      - name: Check modified files
        run: |
            MODIFIED_FILES=$(git diff --name-only origin/main...HEAD)
            ERROR=false
            for FILE in $MODIFIED_FILES
            do
              FILENAME=$(basename $FILE)
              if [[ $FILENAME != "common_libraries.tsv" && $FILENAME != "common_samples.tsv" ]]
              then
                echo -e "\e[31mInvalid file modified: $FILE\e[0m"
                ERROR=true
              fi
            done
            if $ERROR
            then
              exit 1
            fi
            MODIFIED_FILES=$(echo $MODIFIED_FILES | tr '\n' ' ')
            echo "MODIFIED_FILES=$MODIFIED_FILES" >> $GITHUB_ENV
            echo -e "\033[38;5;40mNo modified files except data\033[0m"          

      - name: Run jobs (check_libraries, check_samples)
        id: set-variable
        run: |
            MODIFIED_FILES=(${{ env.MODIFIED_FILES }})
            for FILE in "${MODIFIED_FILES[@]}"
            do
              if [[ $FILE == *"common_libraries.tsv"* ]]; then
                export FILE_PATH_libraries=${{ github.workspace }}/$FILE
                echo "::set-output name=variable_libraries::1"
              elif [[ $FILE == *"common_samples.tsv"* ]]; then
                export FILE_PATH_samples=${{ github.workspace }}/$FILE
                echo "::set-output name=variable_samples::1"
              fi
            done

  check_libraries:
    needs: precheck
    runs-on: ubuntu-latest
    if: needs.precheck.outputs.variable_libraries == '1'

    steps:

      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
  
      - name: Install dependencies
        run: |
            python -m pip install --upgrade pip
            pip install pandas jsonschema

      - name: Run script validation_libraries.py
        run: |
            python scripts/validation_libraries.py

  check_samples:
    needs: precheck
    runs-on: ubuntu-latest    
    if: needs.precheck.outputs.variable_samples == '1'

    steps:

      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
  
      - name: Install dependencies
        run: |
            python -m pip install --upgrade pip
            pip install pandas jsonschema

      - name: Run script validation_samples.py
        run: |
            python scripts/validation_samples.py